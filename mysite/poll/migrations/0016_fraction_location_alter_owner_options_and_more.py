# Generated by Django 4.1.3 on 2022-12-10 07:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("poll", "0015_race"),
    ]

    operations = [
        migrations.CreateModel(
            name="Fraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fraction_name",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "fraction_description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
            ],
            options={
                "verbose_name": "Fraction",
                "verbose_name_plural": "Fractions",
                "db_table": "fraction",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "location_description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
                "db_table": "location",
                "ordering": ["location_name"],
                "managed": True,
            },
        ),
        migrations.AlterModelOptions(
            name="owner",
            options={
                "managed": True,
                "verbose_name": "Owner",
                "verbose_name_plural": "Owners",
            },
        ),
        migrations.AlterModelOptions(
            name="person",
            options={
                "managed": True,
                "permissions": [("special_status", "Can list all persons")],
                "verbose_name": "Person",
                "verbose_name_plural": "Persons",
            },
        ),
        migrations.AlterModelOptions(
            name="race",
            options={
                "managed": True,
                "ordering": ["race_name"],
                "verbose_name": "Race",
                "verbose_name_plural": "Races",
            },
        ),
        migrations.RenameField(
            model_name="person",
            old_name="location_id_birth",
            new_name="location_birth",
        ),
        migrations.RenameField(
            model_name="person",
            old_name="location_id_death",
            new_name="location_death",
        ),
        migrations.RemoveField(model_name="person", name="person_description",),
        migrations.RemoveField(model_name="person", name="race_id",),
        migrations.AddField(
            model_name="person",
            name="biography",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="character",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="interests",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="phobias",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="race",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="poll.race"
            ),
        ),
        migrations.AddField(
            model_name="race",
            name="lifetime",
            field=models.IntegerField(
                default=100, verbose_name="Продолжительность жизни"
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="poll.owner",
            ),
        ),
        migrations.AlterField(
            model_name="race",
            name="equipment",
            field=models.JSONField(verbose_name="Снаряжение"),
        ),
        migrations.AlterField(
            model_name="race",
            name="finish_points",
            field=models.JSONField(verbose_name="Предельные очки характеристик"),
        ),
        migrations.AlterField(
            model_name="race",
            name="race_description",
            field=models.TextField(blank=True, null=True, verbose_name="Описание"),
        ),
        migrations.AlterField(
            model_name="race",
            name="race_name",
            field=models.CharField(
                choices=[
                    ("0", "Эльф"),
                    ("1", "Ангел"),
                    ("2", "Феникс"),
                    ("3", "Дриада"),
                    ("4", "Демон"),
                    ("5", "Вампир"),
                    ("6", "Дроу"),
                    ("7", "Тень"),
                    ("8", "Арахнид"),
                    ("9", "Нежить"),
                    ("10", "Дракон"),
                    ("11", "Драконейт"),
                    ("12", "Оборотень"),
                    ("13", "Человек"),
                    ("14", "Гном"),
                    ("15", "Русал"),
                    ("16", "Зверин"),
                    ("17", "Звероподобное"),
                    ("18", "Змеелюд"),
                    ("19", "Метаморф"),
                    ("20", "Атлант"),
                    ("21", "Гоблин"),
                    ("22", "Орк"),
                ],
                default="13",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="race",
            name="start_permissions",
            field=models.JSONField(verbose_name="Стартовые очки навыков"),
        ),
        migrations.AlterField(
            model_name="race",
            name="start_points",
            field=models.JSONField(verbose_name="Стартовые очки характеристик"),
        ),
        migrations.AlterField(
            model_name="race",
            name="start_resistanses",
            field=models.JSONField(verbose_name="Стартовые очки сопротивлений"),
        ),
        migrations.CreateModel(
            name="Quest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quest_name", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "quest_description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.location"
                    ),
                ),
            ],
            options={
                "verbose_name": "Quest",
                "verbose_name_plural": "Quests",
                "db_table": "quest",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PersonLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reputation", models.IntegerField(blank=True, null=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.location"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.person"
                    ),
                ),
            ],
            options={"db_table": "person_location", "managed": True,},
        ),
        migrations.CreateModel(
            name="PersonFraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reputation", models.IntegerField(blank=True, null=True)),
                (
                    "fraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.fraction"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.person"
                    ),
                ),
            ],
            options={"db_table": "person_fraction", "managed": True,},
        ),
        migrations.CreateModel(
            name="PersonBar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "summary_points",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Суммарные очки характеристик",
                    ),
                ),
                (
                    "summary_permissions",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Суммарные очки умений"
                    ),
                ),
                (
                    "summary_resistances",
                    models.JSONField(
                        blank=True,
                        null=True,
                        verbose_name="Суммарные очки сопротивлений",
                    ),
                ),
                (
                    "summary_equipment",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Суммарные слоты экипировки"
                    ),
                ),
                (
                    "unallocated_points",
                    models.IntegerField(
                        default=0, verbose_name="Нераспределенные очки характеристик"
                    ),
                ),
                (
                    "unallocated_permissions",
                    models.IntegerField(
                        default=0, verbose_name="Нераспределенные очки умений"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="poll.person",
                    ),
                ),
                (
                    "race",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="poll.race",
                    ),
                ),
            ],
            options={"db_table": "person_bar", "managed": True,},
        ),
        migrations.CreateModel(
            name="Party",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("party_name", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "party_description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "quest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.quest"
                    ),
                ),
            ],
            options={
                "verbose_name": "Party",
                "verbose_name_plural": "Parties",
                "db_table": "party",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="LocationFraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reputation", models.IntegerField(blank=True, null=True)),
                (
                    "fraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.fraction"
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.location"
                    ),
                ),
            ],
            options={"db_table": "location_fraction",},
        ),
        migrations.CreateModel(
            name="FractionFraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reputation", models.IntegerField(blank=True, null=True)),
                (
                    "fraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.fraction"
                    ),
                ),
                (
                    "other_fraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="other_fraction",
                        to="poll.fraction",
                    ),
                ),
            ],
            options={"db_table": "fraction_fraction",},
        ),
        migrations.CreateModel(
            name="Clan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("clan_name", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "clan_description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "chief",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="poll.person"
                    ),
                ),
            ],
            options={
                "verbose_name": "Clan",
                "verbose_name_plural": "Clans",
                "db_table": "clan",
                "managed": True,
            },
        ),
    ]
